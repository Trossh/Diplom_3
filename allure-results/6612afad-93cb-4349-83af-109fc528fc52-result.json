{"name": "Оформление заказа авторизованным пользователем", "status": "broken", "statusDetails": {"message": "Exception: Element not found: ('xpath', \"//button[contains(text(),'Оформить заказ')]\")", "trace": "self = <src.pages.main_page.MainPage object at 0x000001EBDDA51410>, locator = ('xpath', \"//button[contains(text(),'Оформить заказ')]\"), timeout = 10\n\n    def find_element(self, locator, timeout=10):\n        try:\n>           return WebDriverWait(self.driver, timeout).until(\n                EC.presence_of_element_located(locator)\n            )\n\nsrc\\pages\\base_page.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"22e7d8a73b4a2086ea63fb9c809ebbcf\")>, method = <function presence_of_element_located.<locals>._predicate at 0x000001EBDDA099E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff60c2478d5+2802741]\nE       \tGetHandleVerifier [0x0x7ff60bfaeb70+79568]\nE       \t(No symbol) [0x0x7ff60bd4c0fa]\nE       \t(No symbol) [0x0x7ff60bda2a96]\nE       \t(No symbol) [0x0x7ff60bda2d4c]\nE       \t(No symbol) [0x0x7ff60bdf6017]\nE       \t(No symbol) [0x0x7ff60bdcaccf]\nE       \t(No symbol) [0x0x7ff60bdf2e24]\nE       \t(No symbol) [0x0x7ff60bdcaa63]\nE       \t(No symbol) [0x0x7ff60bd93c91]\nE       \t(No symbol) [0x0x7ff60bd94a23]\nE       \tGetHandleVerifier [0x0x7ff60c272ced+2979917]\nE       \tGetHandleVerifier [0x0x7ff60c26d0f3+2956371]\nE       \tGetHandleVerifier [0x0x7ff60c28acbd+3078173]\nE       \tGetHandleVerifier [0x0x7ff60bfc836e+184014]\nE       \tGetHandleVerifier [0x0x7ff60bfd024f+216495]\nE       \tGetHandleVerifier [0x0x7ff60bfb70c4+113700]\nE       \tGetHandleVerifier [0x0x7ff60bfb7279+114137]\nE       \tGetHandleVerifier [0x0x7ff60bf9df78+10968]\nE       \tBaseThreadInitThunk [0x0x7ffa37da7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa38e3cc91+33]\n\n..\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_main_functionality.TestMainFunctionality object at 0x000001EBDDA11E50>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"22e7d8a73b4a2086ea63fb9c809ebbcf\")>\nregistered_user = {'email': 'test_user@example.com', 'name': 'Test User', 'password': 'password123'}\n\n    @allure.title(\"Оформление заказа авторизованным пользователем\")\n    def test_make_order_authenticated(self, driver, registered_user):\n        main_page = MainPage(driver)\n        login_page = LoginPage(driver)\n    \n        main_page.go_to_site()\n        main_page.click_personal_account()\n        login_page.login(registered_user['email'], registered_user['password'])\n        main_page.go_to_site()\n>       main_page.click_order_button()\n\ntests\\test_main_functionality.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\pages\\main_page.py:32: in click_order_button\n    self.click(MainPageLocators.ORDER_BUTTON)\nsrc\\pages\\base_page.py:32: in click\n    element = self.find_element(locator, timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.pages.main_page.MainPage object at 0x000001EBDDA51410>, locator = ('xpath', \"//button[contains(text(),'Оформить заказ')]\"), timeout = 10\n\n    def find_element(self, locator, timeout=10):\n        try:\n            return WebDriverWait(self.driver, timeout).until(\n                EC.presence_of_element_located(locator)\n            )\n        except TimeoutException:\n>           raise Exception(f\"Element not found: {locator}\")\nE           Exception: Element not found: ('xpath', \"//button[contains(text(),'Оформить заказ')]\")\n\nsrc\\pages\\base_page.py:21: Exception"}, "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1756200894179, "stop": 1756200908520, "uuid": "f6ec3145-e892-4f4e-8486-41955235e992", "historyId": "bb14be41c708fac9bf7d3bcbc1551c0f", "testCaseId": "3f43f5e7f6e6f286e9fd53508c506539", "fullName": "tests.test_main_functionality.TestMainFunctionality#test_make_order_authenticated", "labels": [{"name": "feature", "value": "Основной функционал"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestMainFunctionality"}, {"name": "host", "value": "WIN-88DRHG89BG7"}, {"name": "thread", "value": "19224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}